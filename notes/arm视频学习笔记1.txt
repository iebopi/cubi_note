一、arm交叉工具链
1.arm-linux-gcc -g -c -o xxx.o xxx.c
2.arm-linux-ld -Tmain.lds -o xxx.elf xxx.o 
3.arm-linux-readelf -a(d) xxx.elf
4.arm-linux-objdump -D -S xxx.elf>dump
5.arm-linux-objcopy -O binary -S xxx.elf xxx.bin 


二、arm寄存器(37个)
{

通用寄存器（31）
 不分组寄存器（R0-R7）(8个)
 分组寄存器(R8-R14)
 程序计数器PC（R15）

状态寄存器（6）
 CPSR、SPSR

重要：R13(SP)、R14（LR）、R15(PC)

CPSR
[31](N) [30](Z) ... [7](I,IRQ) [6](F，FIQ) [4:0](M，工作模式，可设置)

}

三、寻址方式
{
 立即数寻址
 寄存器寻址
 寄存器间接寻址 LDR R1,[R2]
 基址变址寻址 LDR R0，[R1，#4]
 相对寻址 BL NEXT（跳转）   MOV PC,LR(子程序返回)
}

四、ARM汇编指令
{
 @为注释符
1. 算术逻辑指令 mov mvn sub(被减数不能为立即数) add and orr bic(位清除)
2. 比较指令 cmp（存入CPSR） tst(按位与 存入CPSR->Z)
3. 跳转指令（分支指令） b（ bgt （branch1） ） bl
4. 移位指令 lsl（左移） lsr（右移） ror(循环右移)
5. 程序状态字访问指令 msr mrs(mrs r1,cpsr)
6. 存储器访问指令 ldr str
}

五、ARM伪指令
{
1. ARM 机器码
2. 定义类伪指令（伪指令没有对应的机器码，1只在编译时，或，2转换成其他实际指令）
 {
  .global
  .ascii
  .byte
  .word
  .data
  .equ(宏定义)
  .align 4 (四字节对齐)
 }
3. 操作类伪指令
  ldr r0, =0x1ff
  nop (mov r0, r0) （空指令）
}

六、协处理器访问指令（CP15）
  mcr mrc
  mainID读取：mrc p15(CP15),0(Op1),r0(Rd),c0(CRn),c0(CRm),0(Op2)
  

